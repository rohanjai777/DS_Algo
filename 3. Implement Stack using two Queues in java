import java.util.LinkedList;
import java.util.Queue;

class Stack {
    Queue<Integer> primary = new LinkedList<Integer>();
    Queue<Integer> secondary = new LinkedList<Integer>();
    
    Stack(){}
    
    public void push(int n){
        secondary.add(n);
        while(!primary.isEmpty()){
            secondary.add(primary.remove());
        }
        Queue<Integer> temp = primary;
        primary = secondary;
        secondary = temp;
        System.out.println("Element pushed "+n);
    }
    public int pop(){
        if(primary.isEmpty()) {
        System.out.println("Stack is Empty");
        return 0;}
        return primary.remove();
    }
}
public class Runner{
    public static void main(String[] args){
        Stack s = new Stack();
        s.push(1);
        s.push(5);
        s.push(3);
        System.out.println(s.pop());
        s.push(2);
        System.out.println(s.pop());
    }
}
-------
output: 
Stack is Empty
Element pushed 1
Element pushed 5
Element pushed 3
3
Element pushed 2
2
